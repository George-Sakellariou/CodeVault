@model CodeSnippet
@{
    ViewData["Title"] = "Security Scanner";
    var snippetId = Model?.Id ?? 0;
    var securityScan = ViewBag.SecurityScan as CodeSecurityScan;
}
<div class="container py-4">
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="d-flex align-items-center justify-content-between mb-4">
                <div>
                    <h2 class="mb-1">Security Scanner Tool</h2>
                    <p class="text-muted">Detect potential security vulnerabilities in your code</p>
                </div>
            </div>
        </div>
    </div>
    <div class="card shadow-sm border-0 rounded-4 mb-4">
        <div class="card-body">
            <form asp-action="Security" method="post">
                <div class="row">
                    <div class="col-md-12">
                        <div class="mb-3">
                            <label for="snippetId" class="form-label">Code Snippet ID</label>
                            <div class="input-group">
                                <input type="number" class="form-control" id="snippetId" name="snippetId" value="@(snippetId != 0 ? snippetId.ToString() : "")" placeholder="Enter ID of code snippet to scan" required>
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-shield-check me-2"></i>Scan for Vulnerabilities
                                </button>
                            </div>
                            <div class="form-text">Enter the ID of an existing code snippet from your repository</div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    @if (Model != null && snippetId != 0)
    {
        <div class="row">
            <div class="col-lg-6 mb-4">
                <div class="card shadow-sm border-0 rounded-4">
                    <div class="card-header bg-white p-3 d-flex justify-content-between align-items-center">
                        <h5 class="m-0">@Model.Title</h5>
                        <div class="lang-indicator @GetLanguageClass(Model.Language)">@Model.Language</div>
                    </div>
                    <div class="card-body p-0">
                        <div class="code-preview">
                            <pre><code class="language-@GetLanguageClass(Model.Language).Replace("lang-", "")">@Model.Content</code></pre>
                        </div>
                    </div>
                    <div class="card-footer bg-white border-top p-3">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="text-muted small">
                                <i class="bi bi-clock me-1"></i> Created @FormatDate(Model.CreatedAt)
                            </div>
                            <a asp-controller="CodeView" asp-action="Details" asp-route-id="@Model.Id" class="btn btn-sm btn-outline-primary">
                                <i class="bi bi-box-arrow-up-right me-1"></i>View Full Details
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-6 mb-4">
                <div class="card shadow-sm border-0 rounded-4">
                    <div class="card-header bg-white p-3">
                        <h5 class="m-0"><i class="bi bi-shield-lock me-2"></i>Security Scan Results</h5>
                    </div>
                    @if (securityScan != null)
                    {
                        <div class="card-body">
                            <div class="d-flex justify-content-between mb-3">
                                <span>
                                    <strong>Last Scanned:</strong> @securityScan.ScanDate.ToString("MMM d, yyyy")
                                </span>
                                <span>
                                    <strong>Scanner:</strong> @securityScan.Scanner
                                </span>
                            </div>

                            @if (securityScan.SecurityScore.HasValue)
                            {
                                <div class="mb-3">
                                    <strong>Security Score:</strong>
                                    <div class="progress mt-2" style="height: 10px;">
                                        <div class="progress-bar @GetSecurityBarClass(securityScan.SecurityScore.Value)" role="progressbar" style="width: @securityScan.SecurityScore%;"></div>
                                    </div>
                                    <div class="d-flex justify-content-between mt-1">
                                        <small>0</small>
                                        <small>@securityScan.SecurityScore.Value/100</small>
                                        <small>100</small>
                                    </div>
                                </div>
                            }

                            <div class="d-flex mb-3 flex-wrap gap-2">
                                <div class="badge bg-danger">Critical: @securityScan.CriticalIssues</div>
                                <div class="badge bg-warning text-dark">High: @securityScan.HighIssues</div>
                                <div class="badge bg-primary">Medium: @securityScan.MediumIssues</div>
                                <div class="badge bg-info text-dark">Low: @securityScan.LowIssues</div>
                            </div>

                            @if (securityScan.Findings.Any())
                            {
                                <div class="mt-4">
                                    <h6>Issues Found:</h6>
                                    <div class="accordion mt-3" id="securityAccordion">
                                        @foreach (var finding in securityScan.Findings)
                                        {
                                            <div class="accordion-item border-0 mb-2 shadow-sm">
                                                <h2 class="accordion-header">
                                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#finding_@finding.Id.Replace("-", "_")">
                                                        <span class="badge @GetSeverityBadgeClass(finding.Severity) me-2">@finding.Severity</span>
                                                        @finding.Title
                                                    </button>
                                                </h2>
                                                <div id="finding_@finding.Id.Replace("-", "_")" class="accordion-collapse collapse" data-bs-parent="#securityAccordion">
                                                    <div class="accordion-body">
                                                        <p>@finding.Description</p>

                                                        @if (!string.IsNullOrEmpty(finding.CodeSnippet))
                                                        {
                                                            <div class="bg-light p-2 rounded mt-2 mb-2">
                                                                <code>@finding.CodeSnippet</code>
                                                            </div>
                                                        }

                                                        @if (!string.IsNullOrEmpty(finding.Recommendation))
                                                        {
                                                            <div class="mt-3">
                                                                <strong>Recommendation:</strong>
                                                                <p>@finding.Recommendation</p>
                                                            </div>
                                                        }

                                                        @if (!string.IsNullOrEmpty(finding.Reference))
                                                        {
                                                            <div class="mt-2">
                                                                <a href="@finding.Reference" target="_blank" class="btn btn-sm btn-outline-primary">
                                                                    <i class="bi bi-book me-1"></i>Learn More
                                                                </a>
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-success mt-3">
                                    <i class="bi bi-check-circle me-2"></i> No security issues found in this code snippet.
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="card-body">
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle me-2"></i>Security scan results will appear here after you scan the code snippet.
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        @if (securityScan != null && securityScan.Findings.Any())
        {
            <div class="card shadow-sm border-0 rounded-4 mb-4">
                <div class="card-header bg-white p-3">
                    <h5 class="m-0"><i class="bi bi-lightbulb me-2"></i>Security Learning Resources</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        @if (securityScan.Findings.Any(f => f.Severity == "Critical" || f.Severity == "High"))
                        {
                            <div class="col-md-4 mb-3">
                                <div class="card h-100">
                                    <div class="card-body">
                                        <h6 class="card-title">OWASP Top 10</h6>
                                        <p class="card-text small">Learn about the most critical web application security risks and how to mitigate them.</p>
                                        <a href="https://owasp.org/www-project-top-ten/" target="_blank" class="btn btn-sm btn-outline-primary">
                                            <i class="bi bi-box-arrow-up-right me-1"></i>Visit
                                        </a>
                                    </div>
                                </div>
                            </div>
                        }

                        @{
                            var languageResources = new Dictionary<string, (string, string, string)>
                {
                { "javascript", ("JavaScript Security", "Best practices for secure JavaScript development.", "https://cheatsheetseries.owasp.org/cheatsheets/JavaScript_Security_Cheat_Sheet.html") },
                { "typescript", ("TypeScript Security", "Security patterns for TypeScript applications.", "https://auth0.com/blog/typescript-security-best-practices/") },
                { "python", ("Python Security", "Secure coding practices for Python developers.", "https://cheatsheetseries.owasp.org/cheatsheets/Python_Security_Cheat_Sheet.html") },
                { "c#", ("C# Security", "Secure coding guidelines for C# applications.", "https://docs.microsoft.com/en-us/dotnet/standard/security/secure-coding-guidelines") },
                { "java", ("Java Security", "Best practices for secure Java development.", "https://cheatsheetseries.owasp.org/cheatsheets/Java_Security_Cheat_Sheet.html") },
                { "php", ("PHP Security", "Secure coding in PHP applications.", "https://cheatsheetseries.owasp.org/cheatsheets/PHP_Security_Cheat_Sheet.html") },
                { "sql", ("SQL Injection Prevention", "Protecting against SQL injection attacks.", "https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html") }
                };

                            if (languageResources.ContainsKey(Model.Language.ToLower()))
                            {
                                var resource = languageResources[Model.Language.ToLower()];
                                <div class="col-md-4 mb-3">
                                    <div class="card h-100">
                                        <div class="card-body">
                                            <h6 class="card-title">@resource.Item1</h6>
                                            <p class="card-text small">@resource.Item2</p>
                                            <a href="@resource.Item3" target="_blank" class="btn btn-sm btn-outline-primary">
                                                <i class="bi bi-box-arrow-up-right me-1"></i>Visit
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
                        }

                        <div class="col-md-4 mb-3">
                            <div class="card h-100">
                                <div class="card-body">
                                    <h6 class="card-title">Secure Coding Standards</h6>
                                    <p class="card-text small">General guidelines for writing secure code across multiple languages.</p>
                                    <a href="https://www.sans.org/top25-software-errors/" target="_blank" class="btn btn-sm btn-outline-primary">
                                        <i class="bi bi-box-arrow-up-right me-1"></i>Visit
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="text-center py-5 bg-light rounded-4 shadow-sm">
            <i class="bi bi-shield mb-3" style="font-size: 3rem; color: #4e54c8;"></i>
            <h4>Enter a Snippet ID to Scan for Security Issues</h4>
            <p class="text-muted">The tool will analyze your code and detect potential security vulnerabilities.</p>
            <div class="mt-4">
                <h5>What We Scan For</h5>
                <div class="row mt-3">
                    <div class="col-md-3">
                        <div class="card mb-3">
                            <div class="card-body">
                                <h6><i class="bi bi-key me-2"></i>Hardcoded Credentials</h6>
                                <p class="small text-muted">Detect API keys, passwords, and sensitive information in code.</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card mb-3">
                            <div class="card-body">
                                <h6><i class="bi bi-database me-2"></i>Injection Flaws</h6>
                                <p class="small text-muted">SQL, Command, and other injection vulnerabilities.</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card mb-3">
                            <div class="card-body">
                                <h6><i class="bi bi-file-earmark-code me-2"></i>Unsafe Practices</h6>
                                <p class="small text-muted">Insecure functions, eval(), unsanitized input handling.</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card mb-3">
                            <div class="card-body">
                                <h6><i class="bi bi-lock me-2"></i>Authentication Issues</h6>
                                <p class="small text-muted">Weaknesses in authentication and authorization controls.</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <p class="mt-3">
                <a asp-controller="CodeView" asp-action="Index" class="btn btn-outline-primary">
                    <i class="bi bi-code-slash me-2"></i>Browse Code Snippets
                </a>
            </p>
        </div>
    }
</div>
@functions {
    private string GetLanguageClass(string language)
    {
        language = language?.ToLower() ?? "txt";
        switch (language)
        {
            case "javascript": return "lang-js";
            case "typescript": return "lang-ts";
            case "python": return "lang-py";
            case "c#": return "lang-cs";
            case "java": return "lang-java";
            case "php": return "lang-php";
            case "html": return "lang-html";
            case "css": return "lang-css";
            case "ruby": return "lang-ruby";
            case "go": return "lang-go";
            case "rust": return "lang-rust";
            case "sql": return "lang-sql";
            case "shell":
            case "bash": return "lang-bash";
            default: return "lang-" + language;
        }
    }

    private string FormatDate(DateTime date)
    {
        var timeSpan = DateTime.Now - date;

        if (timeSpan.TotalDays < 1)
        {
            if (timeSpan.TotalHours < 1)
                return $"{(int)timeSpan.TotalMinutes} min ago";
            else
                return $"{(int)timeSpan.TotalHours} hours ago";
        }
        else if (timeSpan.TotalDays < 7)
        {
            return $"{(int)timeSpan.TotalDays} days ago";
        }
        else
        {
            return date.ToString("MMM d, yyyy");
        }
    }

    private string GetSecurityBarClass(int score)
    {
        if (score >= 90) return "bg-success";
        if (score >= 70) return "bg-info";
        if (score >= 50) return "bg-warning";
        return "bg-danger";
    }

    private string GetSeverityBadgeClass(string severity)
    {
        switch (severity?.ToLower())
        {
            case "critical": return "bg-danger";
            case "high": return "bg-warning text-dark";
            case "medium": return "bg-primary";
            case "low": return "bg-info text-dark";
            default: return "bg-secondary";
        }
    }
}
@section Scripts {
    <script>
        $(document).ready(function() {
        // Initialize syntax highlighting for code blocks
        document.querySelectorAll('pre code').forEach((block) => {
        hljs.highlightBlock(block);
        });
                // Initialize tooltips
                const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
                const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));
            });
    </script>

    <style>
        .code-preview {
            max-height: 400px;
            overflow: auto;
        }

        .accordion-button:not(.collapsed) {
            background-color: rgba(75, 85, 200, 0.1);
            color: #4b55c8;
        }

        .accordion-button:focus {
            box-shadow: 0 0 0 0.25rem rgba(75, 85, 200, 0.25);
        }
    </style>
}