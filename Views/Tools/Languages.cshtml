@{
    ViewData["Title"] = "Language Reference";
}

<div class="container py-4">
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="d-flex align-items-center justify-content-between mb-4">
                <div>
                    <h2 class="mb-1">Programming Language Reference</h2>
                    <p class="text-muted">Quick access to common patterns, syntax, and best practices</p>
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card shadow-sm border-0 rounded-4">
                <div class="card-body">
                    <ul class="nav nav-pills" id="languageTabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="javascript-tab" data-bs-toggle="tab" data-bs-target="#javascript" type="button" role="tab" aria-controls="javascript" aria-selected="true">
                                <div class="d-flex align-items-center">
                                    <div class="lang-indicator lang-js me-2">JS</div>
                                    JavaScript
                                </div>
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="python-tab" data-bs-toggle="tab" data-bs-target="#python" type="button" role="tab" aria-controls="python" aria-selected="false">
                                <div class="d-flex align-items-center">
                                    <div class="lang-indicator lang-py me-2">PY</div>
                                    Python
                                </div>
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="csharp-tab" data-bs-toggle="tab" data-bs-target="#csharp" type="button" role="tab" aria-controls="csharp" aria-selected="false">
                                <div class="d-flex align-items-center">
                                    <div class="lang-indicator lang-cs me-2">C#</div>
                                    C#
                                </div>
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="java-tab" data-bs-toggle="tab" data-bs-target="#java" type="button" role="tab" aria-controls="java" aria-selected="false">
                                <div class="d-flex align-items-center">
                                    <div class="lang-indicator lang-java me-2">JV</div>
                                    Java
                                </div>
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="sql-tab" data-bs-toggle="tab" data-bs-target="#sql" type="button" role="tab" aria-controls="sql" aria-selected="false">
                                <div class="d-flex align-items-center">
                                    <div class="lang-indicator lang-sql me-2">SQL</div>
                                    SQL
                                </div>
                            </button>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="tab-content" id="languageTabContent">
                <!-- JavaScript Tab -->
                <div class="tab-pane fade show active" id="javascript" role="tabpanel" aria-labelledby="javascript-tab">
                    <div class="row">
                        <div class="col-lg-4 mb-4">
                            <div class="card shadow-sm border-0 rounded-4 h-100">
                                <div class="card-header bg-white p-3">
                                    <h5 class="m-0">Common Patterns</h5>
                                </div>
                                <div class="card-body">
                                    <div class="mb-4">
                                        <h6>Async/Await</h6>
                                        <pre><code class="language-javascript">async function fetchData() {
  try {
    const response = await fetch('https://api.example.com/data');
    if (!response.ok) {
      throw new Error(`HTTP error: ${response.status}`);
    }
    const data = await response.json();
    return data;
  } catch (error) {
    console.error('Error:', error);
    throw error;
  }
}</code></pre>
                                    </div>

                                    <div class="mb-4">
                                        <h6>Array Manipulation</h6>
                                        <pre><code class="language-javascript">// Filter, map and reduce
const numbers = [1, 2, 3, 4, 5];

const evens = numbers.filter(num => num % 2 === 0);
const doubled = numbers.map(num => num * 2);
const sum = numbers.reduce((total, num) => total + num, 0);</code></pre>
                                    </div>

                                    <div class="mb-4">
                                        <h6>Object Destructuring</h6>
                                        <pre><code class="language-javascript">const person = {
  name: 'John',
  age: 30,
  location: {
    city: 'New York',
    country: 'USA'
  }
};

const { name, age, location: { city } } = person;
console.log(name, age, city); // John 30 New York</code></pre>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-4 mb-4">
                            <div class="card shadow-sm border-0 rounded-4 h-100">
                                <div class="card-header bg-white p-3">
                                    <h5 class="m-0">Best Practices</h5>
                                </div>
                                <div class="card-body">
                                    <div class="mb-4">
                                        <h6>Error Handling</h6>
                                        <ul class="mb-3">
                                            <li>Always wrap asynchronous code in try/catch blocks</li>
                                            <li>Handle Promise rejections with .catch() or try/await/catch</li>
                                            <li>Avoid empty catch blocks</li>
                                        </ul>
                                        <pre><code class="language-javascript">try {
  // Risky code
} catch (error) {
  // Categorize errors
  if (error instanceof TypeError) {
    // Handle type errors
  } else if (error instanceof NetworkError) {
    // Handle network errors
  } else {
    // Log and handle unknown errors
    console.error('Unexpected error:', error);
  }
}</code></pre>
                                    </div>

                                    <div class="mb-4">
                                        <h6>Prefer Const & Let over Var</h6>
                                        <pre><code class="language-javascript">// Good practice
const PI = 3.14159;  // Immutable value
let count = 0;      // Value will change
count += 1;

// Avoid
var total = 0;      // Function-scoped, more error-prone</code></pre>
                                    </div>

                                    <div class="mb-4">
                                        <h6>Use Meaningful Names</h6>
                                        <pre><code class="language-javascript">// Good
const userProfiles = fetchUserData();
userProfiles.forEach(profile => {
  processUserProfile(profile);
});

// Bad
const x = getData();
x.forEach(y => {
  process(y);
});</code></pre>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-4 mb-4">
                            <div class="card shadow-sm border-0 rounded-4 h-100">
                                <div class="card-header bg-white p-3">
                                    <h5 class="m-0">Resources</h5>
                                </div>
                                <div class="card-body">
                                    <div class="mb-4">
                                        <h6>Documentation</h6>
                                        <ul class="list-unstyled">
                                            <li class="mb-2">
                                                <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>MDN Web Docs (JavaScript)</span>
                                                </a>
                                            </li>
                                            <li class="mb-2">
                                                <a href="https://javascript.info/" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>JavaScript.info</span>
                                                </a>
                                            </li>
                                            <li class="mb-2">
                                                <a href="https://nodejs.org/en/docs/" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>Node.js Documentation</span>
                                                </a>
                                            </li>
                                        </ul>
                                    </div>

                                    <div class="mb-4">
                                        <h6>Popular Libraries & Frameworks</h6>
                                        <ul class="list-unstyled">
                                            <li class="mb-2">
                                                <a href="https://reactjs.org/" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>React</span>
                                                </a>
                                            </li>
                                            <li class="mb-2">
                                                <a href="https://angular.io/" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>Angular</span>
                                                </a>
                                            </li>
                                            <li class="mb-2">
                                                <a href="https://vuejs.org/" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>Vue.js</span>
                                                </a>
                                            </li>
                                            <li class="mb-2">
                                                <a href="https://expressjs.com/" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>Express.js</span>
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Python Tab -->
                <div class="tab-pane fade" id="python" role="tabpanel" aria-labelledby="python-tab">
                    <div class="row">
                        <div class="col-lg-4 mb-4">
                            <div class="card shadow-sm border-0 rounded-4 h-100">
                                <div class="card-header bg-white p-3">
                                    <h5 class="m-0">Common Patterns</h5>
                                </div>
                                <div class="card-body">
                                    <div class="mb-4">
                                        <h6>List Comprehensions</h6>
                                        <pre><code class="language-python"># Instead of:
squares = []
for x in range(10):
    squares.append(x**2)

# Use list comprehension:
squares = [x**2 for x in range(10)]

# With condition:
even_squares = [x**2 for x in range(10) if x % 2 == 0]</code></pre>
                                    </div>

                                    <div class="mb-4">
                                        <h6>Context Managers (with statement)</h6>
                                        <pre><code class="language-python"># File operations
with open('file.txt', 'r') as file:
    content = file.read()
# File is automatically closed

# Database connections
with db.connection() as conn:
    conn.execute('SELECT * FROM users')
# Connection automatically closed

# Custom context manager
from contextlib import contextmanager

                                                @@contextmanager
def timer():
    import time
    start = time.time()
    yield
    end = time.time()
    print(f"Elapsed: {end - start:.2f} seconds")</code></pre>
                                    </div>

                                    <div class="mb-4">
                                        <h6>Decorators</h6>
                                        <pre><code class="language-python">def log_function_call(func):
    def wrapper(*args, **kwargs):
        print(f"Calling {func.__name__}")
        result = func(*args, **kwargs)
        print(f"{func.__name__} returned {result}")
        return result
    return wrapper

                                                @@log_function_call
def add(a, b):
    return a + b

# Using the decorated function
add(3, 5)  # Logs function call and result</code></pre>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-4 mb-4">
                            <div class="card shadow-sm border-0 rounded-4 h-100">
                                <div class="card-header bg-white p-3">
                                    <h5 class="m-0">Best Practices</h5>
                                </div>
                                <div class="card-body">
                                    <div class="mb-4">
                                        <h6>Follow PEP 8 Style Guide</h6>
                                        <ul>
                                            <li>Use 4 spaces for indentation</li>
                                            <li>Limit lines to 79 characters</li>
                                            <li>Use snake_case for functions and variables</li>
                                            <li>Use CamelCase for classes</li>
                                            <li>Use UPPERCASE for constants</li>
                                        </ul>
                                    </div>

                                    <div class="mb-4">
                                        <h6>Type Hints (Python 3.5+)</h6>
                                        <pre><code class="language-python">from typing import List, Dict, Optional

def process_users(users: List[Dict[str, str]]) -> Dict[str, int]:
    result = {}
    for user in users:
        result[user['name']] = len(user['email'])
    return result

def find_user(user_id: int) -> Optional[Dict[str, str]]:
    # Returns None if user not found
    pass</code></pre>
                                    </div>

                                    <div class="mb-4">
                                        <h6>Error Handling</h6>
                                        <pre><code class="language-python">try:
    value = int(input("Enter a number: "))
    result = 100 / value
except ValueError:
    print("That's not a valid number")
except ZeroDivisionError:
    print("Cannot divide by zero")
except Exception as e:
    print(f"Unexpected error: {e}")
else:
    # Runs if no exceptions
    print(f"Result: {result}")
finally:
    # Always runs
    print("Done")</code></pre>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-4 mb-4">
                            <div class="card shadow-sm border-0 rounded-4 h-100">
                                <div class="card-header bg-white p-3">
                                    <h5 class="m-0">Resources</h5>
                                </div>
                                <div class="card-body">
                                    <div class="mb-4">
                                        <h6>Documentation</h6>
                                        <ul class="list-unstyled">
                                            <li class="mb-2">
                                                <a href="https://docs.python.org/3/" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>Python Official Documentation</span>
                                                </a>
                                            </li>
                                            <li class="mb-2">
                                                <a href="https://peps.python.org/pep-0008/" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>PEP 8 Style Guide</span>
                                                </a>
                                            </li>
                                            <li class="mb-2">
                                                <a href="https://realpython.com/" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>Real Python Tutorials</span>
                                                </a>
                                            </li>
                                        </ul>
                                    </div>

                                    <div class="mb-4">
                                        <h6>Popular Libraries & Frameworks</h6>
                                        <ul class="list-unstyled">
                                            <li class="mb-2">
                                                <a href="https://www.django-rest-framework.org/" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>Django</span>
                                                </a>
                                            </li>
                                            <li class="mb-2">
                                                <a href="https://flask.palletsprojects.com/" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>Flask</span>
                                                </a>
                                            </li>
                                            <li class="mb-2">
                                                <a href="https://pandas.pydata.org/" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>Pandas</span>
                                                </a>
                                            </li>
                                            <li class="mb-2">
                                                <a href="https://numpy.org/" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>NumPy</span>
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- C# Tab -->
                <div class="tab-pane fade" id="csharp" role="tabpanel" aria-labelledby="csharp-tab">
                    <div class="row">
                        <div class="col-lg-4 mb-4">
                            <div class="card shadow-sm border-0 rounded-4 h-100">
                                <div class="card-header bg-white p-3">
                                    <h5 class="m-0">Common Patterns</h5>
                                </div>
                                <div class="card-body">
                                    <div class="mb-4">
                                        <h6>LINQ Queries</h6>
                                        <pre><code class="language-csharp">// Query syntax
var query = from person in people
            where person.Age > 18
            orderby person.LastName
            select new { Name = person.FirstName, Age = person.Age };

// Method syntax
var result = people
    .Where(p => p.Age > 18)
    .OrderBy(p => p.LastName)
    .Select(p => new { Name = p.FirstName, Age = p.Age });</code></pre>
                                    </div>

                                    <div class="mb-4">
                                        <h6>Async/Await</h6>
                                        <pre><code class="language-csharp">public async Task<List<Customer>> GetCustomersAsync()
{
    try
    {
        using HttpClient client = new HttpClient();
        HttpResponseMessage response = await client.GetAsync("api/customers");

        if (response.IsSuccessStatusCode)
        {
            string json = await response.Content.ReadAsStringAsync();
            return JsonSerializer.Deserialize<List<Customer>>(json);
        }
        else
        {
            throw new Exception($"API error: {response.StatusCode}");
        }
    }
    catch (Exception ex)
    {
        _logger.LogError(ex, "Error fetching customers");
        throw;
    }
}</code></pre>
                                    </div>

                                    <div class="mb-4">
                                        <h6>Extension Methods</h6>
                                        <pre><code class="language-csharp">public static class StringExtensions
{
    public static bool IsValidEmail(this string email)
    {
        if (string.IsNullOrEmpty(email))
            return false;

        try
        {
            var addr = new System.Net.Mail.MailAddress(email);
            return addr.Address == email;
        }
        catch
        {
            return false;
        }
    }
}

// Usage
string email = "user@example.com";
bool isValid = email.IsValidEmail();</code></pre>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-4 mb-4">
                            <div class="card shadow-sm border-0 rounded-4 h-100">
                                <div class="card-header bg-white p-3">
                                    <h5 class="m-0">Best Practices</h5>
                                </div>
                                <div class="card-body">
                                    <div class="mb-4">
                                        <h6>Prefer Properties Over Public Fields</h6>
                                        <pre><code class="language-csharp">// Good
public class Person
{
    // Auto-implemented property
    public string Name { get; set; }

    // Property with backing field
    private int _age;
    public int Age
    {
        get { return _age; }
        set
        {
            if (value < 0)
                throw new ArgumentException("Age cannot be negative");

            _age = value;
        }
    }
}

// Avoid
public class BadPerson
{
    public string name; // Public field
    public int age;    // Public field
}</code></pre>
                                    </div>

                                    <div class="mb-4">
                                        <h6>Use IDisposable for Resource Management</h6>
                                        <pre><code class="language-csharp">public class ResourceManager : IDisposable
{
    private bool _disposed = false;
    private FileStream _fileStream;

    public ResourceManager()
    {
        _fileStream = File.Open("data.txt", FileMode.Open);
    }

    protected virtual void Dispose(bool disposing)
    {
        if (!_disposed)
        {
            if (disposing)
            {
                // Dispose managed resources
                _fileStream?.Dispose();
            }

            // Free unmanaged resources

            _disposed = true;
        }
    }

    public void Dispose()
    {
        Dispose(true);
        GC.SuppressFinalize(this);
    }
}</code></pre>
                                    </div>

                                    <div class="mb-4">
                                        <h6>Use Pattern Matching</h6>
                                        <pre><code class="language-csharp">// Switch expression (C# 8.0+)
string GetCalendarSeason(DateTime date) => date.Month switch
{
    3 or 4 or 5 => "Spring",
    6 or 7 or 8 => "Summer",
    9 or 10 or 11 => "Fall",
    12 or 1 or 2 => "Winter",
    _ => throw new ArgumentOutOfRangeException()
};

// Pattern matching with is
if (shape is Circle c)
{
    double area = Math.PI * c.Radius * c.Radius;
}</code></pre>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-4 mb-4">
                            <div class="card shadow-sm border-0 rounded-4 h-100">
                                <div class="card-header bg-white p-3">
                                    <h5 class="m-0">Resources</h5>
                                </div>
                                <div class="card-body">
                                    <div class="mb-4">
                                        <h6>Documentation</h6>
                                        <ul class="list-unstyled">
                                            <li class="mb-2">
                                                <a href="https://learn.microsoft.com/en-us/dotnet/csharp/" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>Microsoft C# Documentation</span>
                                                </a>
                                            </li>
                                            <li class="mb-2">
                                                <a href="https://learn.microsoft.com/en-us/dotnet/standard/design-guidelines/" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>.NET Design Guidelines</span>
                                                </a>
                                            </li>
                                            <li class="mb-2">
                                                <a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>C# Language Reference</span>
                                                </a>
                                            </li>
                                        </ul>
                                    </div>

                                    <div class="mb-4">
                                        <h6>Popular Libraries & Frameworks</h6>
                                        <ul class="list-unstyled">
                                            <li class="mb-2">
                                                <a href="https://dotnet.microsoft.com/en-us/apps/aspnet" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>ASP.NET Core</span>
                                                </a>
                                            </li>
                                            <li class="mb-2">
                                                <a href="https://www.entityframeworktutorial.net/" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>Entity Framework Core</span>
                                                </a>
                                            </li>
                                            <li class="mb-2">
                                                <a href="https://automapper.org/" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>AutoMapper</span>
                                                </a>
                                            </li>
                                            <li class="mb-2">
                                                <a href="https://github.com/dotnet/reactive" target="_blank" class="d-flex align-items-center">
                                                    <i class="bi bi-box-arrow-up-right me-2"></i>
                                                    <span>Reactive Extensions (Rx.NET)</span>
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Java Tab -->
                <div class="tab-pane fade" id="java" role="tabpanel" aria-labelledby="java-tab">
                    <div class="row">
                        <div class="col-lg-4 mb-4">
                            <div class="card shadow-sm border-0 rounded-4 h-100">
                                <div class="card-header bg-white p-3">
                                    <h5 class="m-0">Common Patterns</h5>
                                </div>
                                <div class="card-body">
                                    <div class="mb-4">
                                        <h6>Stream API (Java 8+)</h6>
                                        <pre><code class="language-java">List<Person> people = getPeople();

// Filter, map and collect
List<String> names = people.stream()
    .filter(p -> p.getAge() > 18)
    .sorted(Comparator.comparing(Person::getLastName))
    .map(Person::getFullName)
    .collect(Collectors.toList());

// Find and reduce operations
Optional<Person> youngest = people.stream()
    .min(Comparator.comparing(Person::getAge));

double averageAge = people.stream()
    .mapToInt(Person::getAge)
    .average()
    .orElse(0);</code></pre>
                                    </div>

                                    <div class="mb-4">
                                        <h6>Builder Pattern</h6>
                                        <pre><code class="language-java">public class Person {
    private final String firstName;  // Required
    private final String lastName;   // Required
    private final int age;           // Optional
    private final String address;    // Optional

    private Person(Builder builder) {
        this.firstName = builder.firstName;
        this.lastName = builder.lastName;
        this.age = builder.age;
        this.address = builder.address;
    }

    public static class Builder {
        // Required parameters
        private final String firstName;
        private final String lastName;

        // Optional parameters - initialized with default values
        private int age = 0;
        private String address = "";

        public Builder(String firstName, String lastName) {
            this.firstName = firstName;
            this.lastName = lastName;
        }

        public Builder age(int age) {
            this.age = age;
            return this;
        }

        public Builder address(String address) {
            this.address = address;
            return this;
        }

        public Person build() {
            return new Person(this);
        }
    }
}

// Usage
Person person = new Person.Builder("John", "Doe")
    .age(30)
    .address("123 Main St")
    .build();
